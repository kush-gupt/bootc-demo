name: Build and Push Bootc Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # ========================================================================
  # Build Image 1.0 (Vanilla)
  # ========================================================================
  build-1-0:
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Log in to Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Extract metadata
        id: meta
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Build Image 1.0
        run: |
          cd containerfiles
          podman build --squash --platform ${{ matrix.platform }} \
            -f Containerfile.1.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-${{ matrix.arch }} \
            .

      - name: Push Image 1.0
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-${{ matrix.arch }}

  create-manifest-1-0:
    needs: build-1-0
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Log in to Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Extract metadata
        id: meta
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Create and Push Manifest for 1.0
        run: |
          podman manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-amd64
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-arm64
          podman manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0
          
          # Create dated manifest
          podman manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-${{ steps.meta.outputs.date }}
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-${{ steps.meta.outputs.date }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-amd64
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-${{ steps.meta.outputs.date }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-arm64
          podman manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-${{ steps.meta.outputs.date }}

  # ========================================================================
  # Build Image 2.0 (FIPS)
  # ========================================================================
  build-2-0:
    needs: create-manifest-1-0
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Log in to Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Extract metadata
        id: meta
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Build Image 2.0
        run: |
          cd containerfiles
          podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-${{ matrix.arch }}
          podman tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-${{ matrix.arch }} localhost/bootc-demo:1.0
          podman build --squash --platform ${{ matrix.platform }} \
            -f Containerfile.2.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-${{ matrix.arch }} \
            .

      - name: Push Image 2.0
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-${{ matrix.arch }}

  create-manifest-2-0:
    needs: build-2-0
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Log in to Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Extract metadata
        id: meta
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Create and Push Manifest for 2.0
        run: |
          podman manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-amd64
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-arm64
          podman manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0
          
          # Create dated manifest
          podman manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-${{ steps.meta.outputs.date }}
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-${{ steps.meta.outputs.date }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-amd64
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-${{ steps.meta.outputs.date }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-arm64
          podman manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-${{ steps.meta.outputs.date }}

  # ========================================================================
  # Build Image 3.0 (FIPS + STIG)
  # ========================================================================
  build-3-0:
    needs: create-manifest-2-0
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Log in to Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Extract metadata
        id: meta
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Build Image 3.0
        run: |
          cd containerfiles
          podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-${{ matrix.arch }}
          podman tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-${{ matrix.arch }} localhost/bootc-demo:2.0
          podman build --squash --platform ${{ matrix.platform }} \
            -f Containerfile.3.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-${{ matrix.arch }} \
            .

      - name: Push Image 3.0
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-${{ matrix.arch }}

  create-manifest-3-0:
    needs: build-3-0
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Log in to Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Extract metadata
        id: meta
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Create and Push Manifest for 3.0
        run: |
          podman manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-amd64
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-arm64
          podman manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0
          
          # Create dated manifest
          podman manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-${{ steps.meta.outputs.date }}
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-${{ steps.meta.outputs.date }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-amd64
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-${{ steps.meta.outputs.date }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-arm64
          podman manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-${{ steps.meta.outputs.date }}

  # ========================================================================
  # Build Image 4.0 (FIPS + STIG + WebApp)
  # ========================================================================
  build-4-0:
    needs: create-manifest-3-0
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Log in to Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Extract metadata
        id: meta
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Build Image 4.0
        run: |
          podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-${{ matrix.arch }}
          podman tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-${{ matrix.arch }} localhost/bootc-demo:3.0
          podman build --squash --platform ${{ matrix.platform }} \
            -f containerfiles/Containerfile.4.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-${{ matrix.arch }} \
            .

      - name: Push Image 4.0
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-${{ matrix.arch }}

  create-manifest-4-0:
    needs: build-4-0
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Log in to Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Extract metadata
        id: meta
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Create and Push Manifests for 4.0 and latest
        run: |
          # Create 4.0 manifest
          podman manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-amd64
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-arm64
          podman manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0
          
          # Create dated manifest
          podman manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-${{ steps.meta.outputs.date }}
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-${{ steps.meta.outputs.date }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-amd64
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-${{ steps.meta.outputs.date }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-arm64
          podman manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-${{ steps.meta.outputs.date }}
          
          # Create latest manifest
          podman manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-amd64
          podman manifest add ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-arm64
          podman manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  # ========================================================================
  # Summary
  # ========================================================================
  build-summary:
    needs: create-manifest-4-0
    runs-on: ubuntu-latest
    
    steps:
      - name: Generate build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Successfully built and pushed all multi-arch image tags:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- \`1.0\` - Vanilla CentOS Stream 10 (amd64, arm64)" >> $GITHUB_STEP_SUMMARY
          echo "- \`2.0\` - + FIPS Mode (amd64, arm64)" >> $GITHUB_STEP_SUMMARY
          echo "- \`3.0\` - + DISA STIG (amd64, arm64)" >> $GITHUB_STEP_SUMMARY
          echo "- \`4.0\` - + Modern Web App (amd64, arm64)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Features:" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ Multi-architecture support (amd64 + arm64) **built on native hardware**" >> $GITHUB_STEP_SUMMARY
          echo "- ⚡ **Parallel builds** - AMD64 on x86 runners, ARM64 on ARM runners" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 Single-layer squashed images" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Pull Commands:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Automatically pulls the correct architecture for your system" >> $GITHUB_STEP_SUMMARY
          echo "podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0" >> $GITHUB_STEP_SUMMARY
          echo "podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0" >> $GITHUB_STEP_SUMMARY
          echo "podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0" >> $GITHUB_STEP_SUMMARY
          echo "podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Inspect Multi-arch Manifest:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "podman manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
