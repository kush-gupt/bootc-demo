name: Build and Push Bootc Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Log in to Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Extract metadata
        id: meta
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Build Image 1.0 (Vanilla)
        run: |
          cd containerfiles
          podman build -f Containerfile.1.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-${{ steps.meta.outputs.date }} \
            .

      - name: Push Image 1.0
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0-${{ steps.meta.outputs.date }}

      - name: Build Image 2.0 (FIPS)
        run: |
          cd containerfiles
          # Tag the local image for the FROM statement
          podman tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0 localhost/bootc-demo:1.0
          podman build -f Containerfile.2.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-${{ steps.meta.outputs.date }} \
            .

      - name: Push Image 2.0
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0-${{ steps.meta.outputs.date }}

      - name: Build Image 3.0 (FIPS + STIG)
        run: |
          cd containerfiles
          # Tag the local image for the FROM statement
          podman tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0 localhost/bootc-demo:2.0
          podman build -f Containerfile.3.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-${{ steps.meta.outputs.date }} \
            .

      - name: Push Image 3.0
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0-${{ steps.meta.outputs.date }}

      - name: Build Image 4.0 (FIPS + STIG + WebApp)
        run: |
          # Tag the local image for the FROM statement
          podman tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0 localhost/bootc-demo:3.0
          podman build -f containerfiles/Containerfile.4.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-${{ steps.meta.outputs.date }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            .

      - name: Push Image 4.0
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0-${{ steps.meta.outputs.date }}
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Generate build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Successfully built and pushed all image tags:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- \`1.0\` - Vanilla CentOS Stream 10" >> $GITHUB_STEP_SUMMARY
          echo "- \`2.0\` - + FIPS Mode" >> $GITHUB_STEP_SUMMARY
          echo "- \`3.0\` - + DISA STIG" >> $GITHUB_STEP_SUMMARY
          echo "- \`4.0\` - + Modern Web App" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Pull Commands:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0" >> $GITHUB_STEP_SUMMARY
          echo "podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.0" >> $GITHUB_STEP_SUMMARY
          echo "podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.0" >> $GITHUB_STEP_SUMMARY
          echo "podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:4.0" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

